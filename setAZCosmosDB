#if not already connected directly to AzureDB
#az login
#az account list -o table
#az account set -s <subscription>

##Configuration
# replace with a unique name
# do not use punctuation or uppercase (a-z, 0-9)
export Cosmos_Name=peacewatcher-db2

## if true, change name to avoid DNS failure on create
az cosmosdb check-name-exists -n ${Cosmos_Name}

# set environment variables
export Cosmos_Location="westeurope" #westus2
export Cosmos_Database="kafkaconnect"
export Cosmos_Container="kafka"

# Resource Group Name
export Cosmos_RG=${Cosmos_Name}-rg-cosmos


## create a new resource group
az group create -n $Cosmos_RG -l $Cosmos_Location

## create the Cosmos DB server
# this command takes several minutes to run
az cosmosdb create -g $Cosmos_RG -n $Cosmos_Name

## create the database
# 400 is the minimum --throughput (RUs)
az cosmosdb sql database create -a $Cosmos_Name -n $Cosmos_Database -g $Cosmos_RG --throughput 400

## create the container
# /id is the partition key (case sensitive)
az cosmosdb sql container create -p /id -g $Cosmos_RG -a $Cosmos_Name -d $Cosmos_Database -n $Cosmos_Container

# OPTIONAL: Enable Time to Live (TTL) on the container
export Cosmos_Container_TTL=1000
az cosmosdb sql container update -g $Cosmos_RG -a $Cosmos_Name -d $Cosmos_Database -n $Cosmos_Container --ttl=$Cosmos_Container_TTL





# Keep note of both of the following values as they will be used later in the cosmos-sink-connector.json
# get Cosmos DB endpoint URI
echo https://${Cosmos_Name}.documents.azure.com:443/

# get Cosmos DB primary connection key
az cosmosdb keys list -n $Cosmos_Name -g $Cosmos_RG --query primaryMasterKey -o tsv





#create the connector using REST API, curl to Kafka connect service on local terminal
#vraie commande :
curl -H "Content-Type: application/json" -X POST -d @/home/paulc/Documents/Efrei/dataEngineering/data_engineering_project/src/main/scala/com/peaceland/cosmos-sink-connector.json http://localhost:8083/connectors #https://peacewatcher-db2.documents.azure.com:443/

#tests non concluants :
#curl -H "Authorization: Bearer TS22Ax9r8GAWuykawxVvfrfGyvQdQ89y5OGZpA9KdSKxSVfB9rQfVaYMXzI44FsLznqlgnJrmaFYACDbHxrAZw==" "Content-Type: application/json" -X POST -d @/home/paulc/Documents/Efrei/dataEngineering/data_engineering_project/src/main/scala/com/peaceland/cosmos-sink-connector.json https://peacewatcher-db2.documents.azure.com:443/
#curl -H "Authorization: Bearer f6ELgBMkWMf6IAdapANkBgcjZS3rKrdyakQULEkgd71r2pO1OdrQ6EM3RCbzB7MfGuVwyHWJiQZpACDbbsUW6A==" \
#     -H "Content-Type: application/json" \
#     -X POST \
#     -H "x-ms-version: 2021-05-15" \
#     -d @/home/paulc/Documents/Efrei/dataEngineering/data_engineering_project/src/main/scala/com/peaceland/cosmos-sink-connector.json \
#     https://peacewatcher-db2.documents.azure.com:443/


# Curl to Kafka connect service on local terminal
curl -X DELETE http://localhost:8083/connectors/cosmosdb-sink-connector




# delete Cosmos DB instance
az cosmosdb delete -g $Cosmos_RG -n $Cosmos_Name

#delete Cosmos DB resource group
az group delete --no-wait -y -n $Cosmos_RG

